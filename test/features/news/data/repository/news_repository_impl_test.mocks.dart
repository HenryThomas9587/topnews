// Mocks generated by Mockito 5.4.4 from annotations
// in topnews/test/features/news/data/repository/news_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:topnews/features/news/data/datasource/news_local_data_source.dart'
    as _i5;
import 'package:topnews/features/news/data/datasource/news_remote_data_source.dart'
    as _i3;
import 'package:topnews/features/news/data/model/news_model.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNewsModel_0 extends _i1.SmartFake implements _i2.NewsModel {
  _FakeNewsModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NewsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsRemoteDataSource extends _i1.Mock
    implements _i3.NewsRemoteDataSource {
  MockNewsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.NewsModel>> getNewsList({
    int? page = 1,
    int? pageSize = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewsList,
          [],
          {
            #page: page,
            #pageSize: pageSize,
          },
        ),
        returnValue: _i4.Future<List<_i2.NewsModel>>.value(<_i2.NewsModel>[]),
      ) as _i4.Future<List<_i2.NewsModel>>);

  @override
  _i4.Future<_i2.NewsModel> getNewsDetail(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getNewsDetail,
          [id],
        ),
        returnValue: _i4.Future<_i2.NewsModel>.value(_FakeNewsModel_0(
          this,
          Invocation.method(
            #getNewsDetail,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.NewsModel>);
}

/// A class which mocks [NewsLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsLocalDataSource extends _i1.Mock
    implements _i5.NewsLocalDataSource {
  MockNewsLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.NewsModel>> getCachedNewsList() => (super.noSuchMethod(
        Invocation.method(
          #getCachedNewsList,
          [],
        ),
        returnValue: _i4.Future<List<_i2.NewsModel>>.value(<_i2.NewsModel>[]),
      ) as _i4.Future<List<_i2.NewsModel>>);

  @override
  _i4.Future<void> cacheNewsList(List<_i2.NewsModel>? news) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheNewsList,
          [news],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
